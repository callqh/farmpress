{"version":3,"file":"server.js","sourceRoot":"","sources":["server.ts"],"names":[],"mappings":";;;;;AAmBA,sBAkCC;AArDD,gDAAwB;AACxB,8DAAsC;AACtC,kDAA0B;AAC1B,gDAAwB;AACxB,qCAA8B;AAc9B,+BAA+B;AACxB,KAAK,UAAU,KAAK,CAAC,OAAqB;IAC/C,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC;IACnD,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;IACjC,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;IACjC,MAAM,IAAI,GAAG,OAAO,IAAI,QAAQ,IAAI,IAAI,CAAC;IACzC,MAAM,IAAI,GAAG,OAAO,IAAI,QAAQ,IAAI,WAAW,CAAC;IAChD,MAAM,IAAI,GAAG,GAAG,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC;IAC9D,MAAM,QAAQ,GAAG,IAAA,qBAAW,GAAE,CAAC;IAC/B,MAAM,KAAK,GAAG,IAAA,cAAI,EAAC,cAAI,CAAC,OAAO,CAAC,IAAA,aAAG,GAAE,EAAE,YAAY,CAAC,EAAE;QACpD,IAAI,EAAE,IAAI;QACV,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE,IAAI;KAChB,CAAC,CAAC;IACH,IAAI,IAAI,EAAE,CAAC;QACT,IAAA,eAAK,GAAE;aACJ,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC;aAC1B,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,GAAU,EAAE,EAAE;YACjC,IAAI,GAAG,EAAE,CAAC;gBACR,MAAM,GAAG,CAAC;YACZ,CAAC;YACD,OAAO,CAAC,GAAG,CACT,oCAAoC,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,CAC9D,CAAC;QACJ,CAAC,CAAC,CAAC;IACP,CAAC;SAAM,CAAC;QACN,IAAA,eAAK,GAAE;aACJ,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC;aACpB,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,GAAU,EAAE,EAAE;YACjC,IAAI,GAAG,EAAE,CAAC;gBACR,MAAM,GAAG,CAAC;YACZ,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,oCAAoC,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACP,CAAC;AACH,CAAC","sourcesContent":["import sirv from 'sirv';\nimport compression from 'compression';\nimport polka from 'polka';\nimport path from 'path';\nimport { cwd } from 'process';\n\nexport interface CLIServeOption {\n  base?: string;\n  rootDir?: string;\n  port?: number;\n  host?: string;\n}\n\ninterface ServeOptions {\n  port?: number;\n  host?: string;\n}\n\n// Serve ssg site in production\nexport async function serve(options: ServeOptions) {\n  const { port: userPort, host: userHost } = options;\n  const envPort = process.env.PORT;\n  const envHost = process.env.HOST;\n  const port = envPort || userPort || 4173;\n  const host = envHost || userHost || 'localhost';\n  const base = '/'?.replace(/^\\//, '').replace(/\\/$/, '') || '';\n  const compress = compression();\n  const serve = sirv(path.resolve(cwd(), 'docs_build'), {\n    etag: true,\n    maxAge: 31536000,\n    immutable: true,\n  });\n  if (base) {\n    polka()\n      .use(base, compress, serve)\n      .listen(port, host, (err: Error) => {\n        if (err) {\n          throw err;\n        }\n        console.log(\n          `Preview server running at http://${host}:${port}/${base}/\\n`,\n        );\n      });\n  } else {\n    polka()\n      .use(compress, serve)\n      .listen(port, host, (err: Error) => {\n        if (err) {\n          throw err;\n        }\n        console.log(`Preview server running at http://${host}:${port}/\\n`);\n      });\n  }\n}\n"]}